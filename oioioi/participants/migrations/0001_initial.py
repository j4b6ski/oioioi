# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2018-08-16 19:12
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import oioioi.base.fields
import oioioi.participants.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contests', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OnsiteRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='number')),
                ('local_number', models.IntegerField(verbose_name='local number')),
            ],
        ),
        migrations.CreateModel(
            name='OpenRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms_accepted', models.BooleanField(default=False, help_text='I declare that I have read the contest rules and the technical arrangements. I fully understand them and accept them unconditionally.', verbose_name='terms accepted')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', oioioi.base.fields.EnumField(default=b'ACTIVE', max_length=64)),
                ('anonymous', models.BooleanField(default=False)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(re.compile(b'^[a-z0-9_-]+$'), "Enter a valid 'slug' consisting of lowercase letters, numbers, underscores or hyphens.", b'invalid')])),
                ('name', models.CharField(max_length=255)),
                ('region_server', models.CharField(blank=True, help_text='IP address or hostname of the regional server', max_length=255, null=True, verbose_name='Region server')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='contests.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='TestRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('participant', oioioi.participants.fields.OneToOneBothHandsCascadingParticipantField(on_delete=django.db.models.deletion.CASCADE, related_name='participants_testregistration', to='participants.Participant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='openregistration',
            name='participant',
            field=oioioi.participants.fields.OneToOneBothHandsCascadingParticipantField(on_delete=django.db.models.deletion.CASCADE, related_name='participants_openregistration', to='participants.Participant'),
        ),
        migrations.AddField(
            model_name='onsiteregistration',
            name='participant',
            field=oioioi.participants.fields.OneToOneBothHandsCascadingParticipantField(on_delete=django.db.models.deletion.CASCADE, related_name='participants_onsiteregistration', to='participants.Participant'),
        ),
        migrations.AddField(
            model_name='onsiteregistration',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='participants.Region', verbose_name='region'),
        ),
        migrations.AlterUniqueTogether(
            name='region',
            unique_together=set([('contest', 'short_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together=set([('contest', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='onsiteregistration',
            unique_together=set([('region', 'local_number')]),
        ),
    ]
